/*admin-lte-2.4.2@2018-04-27*/
function logout() {}

function create_const_select(constGroup, selector) {
    var sel = $(selector), defVal = sel.attr("data-constVal"), data = Const.getListByGroup(constGroup);
    $.each(data, function(i, d) {
        1 == d.activeFlag && sel.append($("<option value='" + d.constCode + "' " + (defVal == d.constCode ? "selected" : "") + ">" + d.constName + "</option>"));
    });
}

function queryEvent() {
    var tableOptions = {
        ajax: {
            url: "/event/list",
            method: "POST",
            contentType: "application/json;charset=UTF-8",
            dataSrc: function(json) {
                return json.data.forEach(function(e) {
                    e.genderStr = e.gender, e.genderStr = Const.translateByGroupAndCode("GENDER", e.gender), 
                    e.eventTypeStr = Const.translateByGroupAndCode("EVENT_TYPE", e.eventType), e.signed || (e.eventTypeStr += '<small class="badge bg-yellow newflag">新</small>'), 
                    e.name = '<a href="/event/' + e.eventId + '" target=_blank>' + e.name + "</a>";
                }), json.data;
            },
            data: function(data) {
                return data.condition = $("#eventQueryForm").serializeObject(), data.condition.eventType = currentMenu, 
                JSON.stringify(data);
            }
        },
        rowCallback: function(row, data, index) {
            $(row).addClass("newmessage").on("click", function() {
                window.open("/event/" + data.eventId);
            });
        },
        columns: [ {
            data: "eventTypeStr"
        }, {
            data: "name"
        }, {
            data: "genderStr"
        }, {
            data: "idNum"
        }, {
            data: "eventTime"
        }, {
            data: "inputTime"
        }, {
            data: "inputRealName"
        }, {
            data: "inputOrgName"
        } ]
    };
    $("#eventTable").DataTable().destroy(), $("#eventTable").dataTable($.extend({}, tableOptions, tableDefaultOptions));
}

function _guessPageFromLocation() {
    var loc = location.search.indexOf("t="), v = location.search.substr(loc + 2);
    loc = v.indexOf("&"), loc > -1 && (v = v.substr(0, loc)), "0" == (currentMenu = v) && (currentMenu = "");
}

function _showPageTitle() {
    var title = '<span class="glyphicon glyphicon-bell"></span> 您有<a data-toggle="tooltip" onclick="loadNewMessage();" title="点击显示所有未签收消息" id="newCount" class="badge bg-red" data-original-title="点击显示所有未签收消息">0</a>条新消息';
    "" != currentMenu && (title = Const.translateByGroupAndCode("EVENT_TYPE", currentMenu)), 
    $(".list-title").html(title), $('[data-toggle="tooltip"]').tooltip();
}

function loadNewMessage() {
    currentMenu = "NEW", $("#eventQueryForm").get(0).reset(), queryEvent();
}

function _loadNewMessageCount() {
    0 != $("#newCount").length && $.get("/event/newcount", function(data) {
        data.success && $("#newCount").text(data.data);
    });
}

function insertAttach(src) {
    $(src).before($("<input type=file name=file>"));
}

$.fn.serializeObject = function() {
    var o = {}, a = this.serializeArray();
    return $.each(a, function() {
        void 0 !== o[this.name] ? (o[this.name].push || (o[this.name] = [ o[this.name] ]), 
        o[this.name].push(this.value || "")) : o[this.name] = this.value || "";
    }), o;
};

var datepickerConfig = {
    locale: {
        format: "YYYY-MM-DD",
        separator: " 至 ",
        applyLabel: "确定",
        cancelLabel: "取消",
        fromLabel: "从",
        toLabel: "至",
        daysOfWeek: [ "日", "一", "二", "三", "四", "五", "六" ],
        monthNames: [ "一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月" ],
        firstDay: 1
    },
    autoApply: !0,
    showDropdowns: !0
};

$(function() {
    $.ajaxSetup({
        beforeSend: function(jqxhr) {
            var token = $("meta[name='_csrf']").attr("content"), header = $("meta[name='_csrf_header']").attr("content");
            token && header && jqxhr.setRequestHeader(header, token);
        }
    }), $(":radio,:checkbox").iCheck({
        checkboxClass: "icheckbox_square-blue",
        radioClass: "iradio_flat-blue"
    }).on("ifChanged", function(event) {
        $(event.target).trigger("change");
    }), $("[data-datepicker]").daterangepicker($.extend({}, datepickerConfig, {
        singleDatePicker: !0
    })), $("[data-daterangepicker]").daterangepicker(datepickerConfig), $("[data-daterangepicker]").each(function(i, e) {
        var v = $(e).attr("data-default");
        $(e).val(v);
    }), $('[data-toggle="tooltip"]').tooltip();
});

var Const = {
    cacheAllConst: function() {
        $.ajax("/const", {
            async: !1
        }).done(function(data) {
            sessionStorage.setItem("consts", JSON.stringify(data));
        });
    },
    getListByGroup: function(constGroup) {
        var consts = JSON.parse(sessionStorage.getItem("consts")), target = [];
        return consts.forEach(function(d) {
            d.constGroup == constGroup && target.push(d);
        }), target;
    },
    translateByGroupAndCode: function(group, code) {
        var consts = JSON.parse(sessionStorage.getItem("consts")), target = {
            constName: "",
            constCode: ""
        };
        return consts.forEach(function(d) {
            d.constGroup == group && d.constCode == code && (target = d);
        }), target.constName;
    }
};

$(function() {
    Const.cacheAllConst(), $("select[data-constGroup]").each(function(i, e) {
        create_const_select($(e).attr("data-constGroup"), e);
    }), $("label[data-const],span[data-const],p[data-const]").each(function(i, e) {
        e = $(e);
        var translated = Const.translateByGroupAndCode(e.attr("data-constgroup"), e.attr("data-constval"));
        e.text(translated);
    });
});

var currentMenu = "", tableDefaultOptions = {
    paging: !0,
    processing: !0,
    serverSide: !0,
    pageLength: 20,
    lengthChange: !1,
    searching: !1,
    ordering: !1,
    info: !0,
    autoWidth: !1,
    language: {
        lengthMenu: "每页显示 _MENU_ 行",
        zeroRecords: "未检索到数据，请去掉部分检索条件后重试，或检索其他类型。",
        info: "第 _PAGE_ 页/共 _PAGES_ 页（显示第 _START_ ~ _END_条 / 共检索出 _MAX_ 条）",
        infoEmpty: "未检索到数据",
        infoFiltered: "(从 _MAX_ 条记录中筛选)",
        loadingRecords: "加载中...",
        loading: "正在搜索...",
        processing: "正在搜索...",
        paginate: {
            first: "第一页",
            last: "最后一页",
            next: "下一页",
            previous: "上一页"
        }
    }
};

$(function() {
    _guessPageFromLocation(), _showPageTitle(), _loadNewMessageCount(), $(".navbar-nav li").each(function(i, e) {
        $(e).attr("data-eventType") == currentMenu ? $(e).addClass("active") : $(e).removeClass("active");
    }), queryEvent();
});